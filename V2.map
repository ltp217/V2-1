*************************************
------------- Call Depth ------------
 Depth  Interrupt    Function
-------------------------------------
    0        N         ProgramStart
    1        Y           _PWM2P_l
    1        Y           _ALLInt
    0        N         _main
C   1        N           _mcu_init
C   2        N             _ad_cali_p
C   2        N             _led_disp
C   1        N           _adc_sample
C   1        N           _led_ctrl_by_voltage
C   1        N           _reserve_led_ocuppied
C   1        N           _reserve_led_ocuppied
C   1        N           _reserve_led_ocuppied
C   1        N           _reserve_led_ocuppied
C   1        N           _led_ctrl_by_voltage
C   1        N           _reserve_led_ocuppied
C   1        N           _led_disp
-------------------------------------
Stack Depth: 2
****************************************
------------- Free ROM Size ------------
Start=0X9    , End=0X11   , Size=9
Start=0X32D  , End=0X3FF  , Size=211
----------------------------------------
EM78P301N       |        ROM Size        
----------------+-----------------------
Total           |  1024 x 13 bits(100.0%)
Used            |   804 x 13 bits( 78.5%)
Free            |   220 x 13 bits( 21.5%)
----------------------------------------
*************************************
-------------- Data Map -------------
d -- Uninitialized data
D -- Initialized data
b -- Uninitialized bit data
B -- Initialized bit data
C -- C Register
-------------- RAM Data -------------
0x00  - - - - - - - - - - - - - - - - 
0x10  - - - - - - - - - - - - - - - - 
0x20  d d d d d d d d d d d d b d d d 
0x30  d d d d d d d d - - - - - - - - 
0x40  - - - - - - - - - - - - - - - - 
0x50  - - - - - - - - - - - - - - - - 
----------- Register Data -----------
0x00  d d d b b b b b b b b d d d b b 
0x10  d C C - - - - - - - - - - - - - 
0x20  - - - - - b b b b d d d d d b b 
-------------- IO Data --------------
0x00  - - - - - d d d d d d d d d d d 
0x10  - - - - - d d d d - - - - - - d 
****************************************
--------------- ROM Code ---------------
    0x0000 :  JMP   0x016       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 215)
  ;if (g_led_occupied == 0)
    0x0001 :  BANK  @0x0        
    0x0002 :  JBC   0x2C, 7     
    0x0003 :  JMP   0x006       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 217)
  ;g_led_occupied = 1;
    0x0004 :  BS    0x2C, 7     
    0x0005 :  JMP   0x008       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 221)
  ;g_led_occupied = 0;
    0x0006 :  BANK  @0x0        
    0x0007 :  BC    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 223)
  ;}
    0x0008 :  RET               
    0x0009 :  ADD   A, @0xFF    
    0x000A :  ADD   A, @0xFF    
    0x000B :  ADD   A, @0xFF    
    0x000C :  ADD   A, @0xFF    
    0x000D :  ADD   A, @0xFF    
    0x000E :  ADD   A, @0xFF    
    0x000F :  ADD   A, @0xFF    
    0x0010 :  ADD   A, @0xFF    
    0x0011 :  ADD   A, @0xFF    
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 125)
  ;_asm{MOV A,0x2};
    0x0012 :  MOV   A, 0x02     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 126)
  ;}
    0x0013 :  BC    0x03, 5     
    0x0014 :  BC    0x03, 6     
    0x0015 :  JMP   0x1F2       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 297)
  ;uchar temp_keyval = 1;
    0x0016 :  MOV   A, @0x01    
    0x0017 :  BANK  @0x0        
    0x0018 :  MOV   0x37, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 298)
  ;uchar duty_val = 50;         //发热丝达到3.7V的占空比参考值
    0x0019 :  MOV   A, @0x32    
    0x001A :  MOV   0x35, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 299)
  ;uchar adctest_times = 0;
    0x001B :  CLR   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 301)
  ;mcu_init();
    0x001C :  CALL  0x216       
    0x001D :  JMP   0x1F0       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 305)
  ;adc_sample();
    0x001E :  CALL  0x2E7       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 307)
  ;switch(g_cur_state)
    0x001F :  BANK  @0x0        
    0x0020 :  MOV   A, 0x31     
    0x0021 :  MOV   0x11, A     
    0x0022 :  MOV   A, 0x11     
    0x0023 :  XOR   A, @0x01    
    0x0024 :  JBC   0x03, 2     
    0x0025 :  JMP   0x033       
    0x0026 :  MOV   A, 0x11     
    0x0027 :  XOR   A, @0x02    
    0x0028 :  JBC   0x03, 2     
    0x0029 :  JMP   0x0B7       
    0x002A :  MOV   A, 0x11     
    0x002B :  XOR   A, @0x04    
    0x002C :  JBC   0x03, 2     
    0x002D :  JMP   0x129       
    0x002E :  MOV   A, 0x11     
    0x002F :  XOR   A, @0x08    
    0x0030 :  JBC   0x03, 2     
    0x0031 :  JMP   0x159       
    0x0032 :  JMP   0x19B       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 310)
  ;if(g_keypress_maxtime > 0)
    0x0033 :  BANK  @0x0        
    0x0034 :  MOV   0x2F, 0x2F  
    0x0035 :  JBC   0x03, 2     
    0x0036 :  JMP   0x0AD       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 312)
  ;led_ctrl_by_voltage();
    0x0037 :  CALL  0x308       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 314)
  ;if(g_keypress_maxtime > 200)       //判断吸烟超过10s情况
    0x0038 :  BANK  @0x0        
    0x0039 :  MOV   A, 0x2F     
    0x003A :  SUB   A, @0xC8    
    0x003B :  JBC   0x03, 0     
    0x003C :  JMP   0x04B       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 316)
  ;DUTY(0);                       //关掉MOS管
    0x003D :  BS    0x04, 7     
    0x003E :  CLR   0x0B        
    0x003F :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 317)
  ;if(g_led_occupied == 0)        //判断LED是否被占用
    0x0040 :  JBC   0x2C, 7     
    0x0041 :  JMP   0x045       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 319)
  ;g_led_occupied = 1;        //占用灯
    0x0042 :  BS    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 320)
  ;g_led_light_times = 0x8;   //闪烁8次
    0x0043 :  MOV   A, @0x08    
    0x0044 :  MOV   0x2D, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 323)
  ;if(g_led_light_times == 0)     //解除占用
    0x0045 :  BANK  @0x0        
    0x0046 :  MOV   0x2D, 0x2D  
    0x0047 :  JBS   0x03, 2     
    0x0048 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 325)
  ;g_led_occupied = 0;
    0x0049 :  BC    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 328)
  ;break;
    0x004A :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 331)
  ;if(g_loadvolt < SHORT_LOAD_VOLT)           //检测雾化器短路故障
    0x004B :  MOV   A, @0x04    
    0x004C :  BANK  @0x0        
    0x004D :  SUB   A, 0x24     
    0x004E :  JBS   0x03, 2     
    0x004F :  JMP   0x052       
    0x0050 :  MOV   A, @0x00    
    0x0051 :  SUB   A, 0x23     
    0x0052 :  JBC   0x03, 0     
    0x0053 :  JMP   0x066       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 333)
  ;DUTY(100);
    0x0054 :  MOV   A, @0x64    
    0x0055 :  BS    0x04, 7     
    0x0056 :  MOV   0x0B, A     
    0x0057 :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 334)
  ;adctest_times++;
    0x0058 :  BANK  @0x0        
    0x0059 :  INC   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 335)
  ;if(adctest_times >= 3)
    0x005A :  MOV   A, @0x03    
    0x005B :  SUB   A, 0x36     
    0x005C :  JBS   0x03, 0     
    0x005D :  JMP   0x066       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 337)
  ;adctest_times = 0;
    0x005E :  CLR   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 338)
  ;reserve_led_ocuppied();
    0x005F :  CALL  0x001       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 339)
  ;g_fault_state = 0x08;
    0x0060 :  MOV   A, @0x08    
    0x0061 :  BANK  @0x0        
    0x0062 :  MOV   0x20, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 340)
  ;g_next_state = 0x02;
    0x0063 :  MOV   A, @0x02    
    0x0064 :  MOV   0x32, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 342)
  ;break;
    0x0065 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 346)
  ;if(g_batteryvolt < LOW_BAT_VOLT)        //检测电池低压故障
    0x0066 :  MOV   A, @0x08    
    0x0067 :  BANK  @0x0        
    0x0068 :  SUB   A, 0x22     
    0x0069 :  JBS   0x03, 2     
    0x006A :  JMP   0x06D       
    0x006B :  MOV   A, @0x88    
    0x006C :  SUB   A, 0x21     
    0x006D :  JBC   0x03, 0     
    0x006E :  JMP   0x07D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 348)
  ;adctest_times++;
    0x006F :  BANK  @0x0        
    0x0070 :  INC   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 349)
  ;if(adctest_times >= 3)
    0x0071 :  MOV   A, @0x03    
    0x0072 :  SUB   A, 0x36     
    0x0073 :  JBS   0x03, 0     
    0x0074 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 351)
  ;adctest_times = 0;
    0x0075 :  CLR   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 352)
  ;reserve_led_ocuppied();
    0x0076 :  CALL  0x001       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 353)
  ;g_fault_state = 0x04;
    0x0077 :  MOV   A, @0x04    
    0x0078 :  BANK  @0x0        
    0x0079 :  MOV   0x20, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 354)
  ;g_next_state = 0x02;
    0x007A :  MOV   A, @0x02    
    0x007B :  MOV   0x32, A     
    0x007C :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 359)
  ;if(g_batteryvolt >= STABLE_BAT_VOLT)
    0x007D :  MOV   A, @0x09    
    0x007E :  BANK  @0x0        
    0x007F :  SUB   A, 0x22     
    0x0080 :  JBS   0x03, 2     
    0x0081 :  JMP   0x084       
    0x0082 :  MOV   A, @0xDD    
    0x0083 :  SUB   A, 0x21     
    0x0084 :  JBS   0x03, 0     
    0x0085 :  JMP   0x0A5       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 361)
  ;if(g_loadvolt > STABLE_LOAD_VOLT_MAX)
    0x0086 :  BANK  @0x0        
    0x0087 :  MOV   A, 0x24     
    0x0088 :  SUB   A, @0x0A    
    0x0089 :  JBS   0x03, 2     
    0x008A :  JMP   0x08D       
    0x008B :  MOV   A, 0x23     
    0x008C :  SUB   A, @0x00    
    0x008D :  JBC   0x03, 0     
    0x008E :  JMP   0x093       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 363)
  ;duty_val -= 2;
    0x008F :  MOV   A, @0x02    
    0x0090 :  BANK  @0x0        
    0x0091 :  SUB   0x35, A     
    0x0092 :  JMP   0x09F       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 365)
  ;else if(g_loadvolt < STABLE_LOAD_VOLT_MIN)
    0x0093 :  MOV   A, @0x09    
    0x0094 :  BANK  @0x0        
    0x0095 :  SUB   A, 0x24     
    0x0096 :  JBS   0x03, 2     
    0x0097 :  JMP   0x09A       
    0x0098 :  MOV   A, @0xBB    
    0x0099 :  SUB   A, 0x23     
    0x009A :  JBC   0x03, 0     
    0x009B :  JMP   0x09F       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 367)
  ;duty_val += 2;
    0x009C :  MOV   A, @0x02    
    0x009D :  BANK  @0x0        
    0x009E :  ADD   0x35, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 370)
  ;DUTY(duty_val);
    0x009F :  BANK  @0x0        
    0x00A0 :  MOV   A, 0x35     
    0x00A1 :  BS    0x04, 7     
    0x00A2 :  MOV   0x0B, A     
    0x00A3 :  BS    0x08, 6     
    0x00A4 :  JMP   0x0A9       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 374)
  ;DUTY(100);
    0x00A5 :  MOV   A, @0x64    
    0x00A6 :  BS    0x04, 7     
    0x00A7 :  MOV   0x0B, A     
    0x00A8 :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 377)
  ;g_led_light_times = 0xff;
    0x00A9 :  MOV   A, @0xFF    
    0x00AA :  BANK  @0x0        
    0x00AB :  MOV   0x2D, A     
    0x00AC :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 382)
  ;P5CR = 0X01;		      //P50设为输入 ,P51,P55设为输出
    0x00AD :  MOV   A, @0x01    
    0x00AE :  BC    0x03, 6     
    0x00AF :  IOW   0x5         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 383)
  ;AISR = 0X00;              //P55设为IO端口
    0x00B0 :  BC    0x04, 7     
    0x00B1 :  CLR   0x08        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 384)
  ;reserve_led_ocuppied();
    0x00B2 :  CALL  0x001       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 385)
  ;g_next_state = 0x08;
    0x00B3 :  MOV   A, @0x08    
    0x00B4 :  BANK  @0x0        
    0x00B5 :  MOV   0x32, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 388)
  ;break;
    0x00B6 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 391)
  ;DUTY(0);
    0x00B7 :  BS    0x04, 7     
    0x00B8 :  CLR   0x0B        
    0x00B9 :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 393)
  ;if(g_fault_state == 0x02)
    0x00BA :  BANK  @0x0        
    0x00BB :  MOV   A, 0x20     
    0x00BC :  XOR   A, @0x02    
    0x00BD :  JBS   0x03, 2     
    0x00BE :  JMP   0x0D0       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 395)
  ;if(g_led_occupied == 0)
    0x00BF :  JBC   0x2C, 7     
    0x00C0 :  JMP   0x0C8       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 397)
  ;g_led_r = 0;
    0x00C1 :  BC    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 398)
  ;g_led_g = 0;
    0x00C2 :  BC    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 399)
  ;g_led_b = 1;
    0x00C3 :  BS    0x2C, 2     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 400)
  ;g_led_onoff_status = 1;
    0x00C4 :  BS    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 401)
  ;g_led_occupied = 1;
    0x00C5 :  BS    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 402)
  ;g_led_light_times = 0x14;
    0x00C6 :  MOV   A, @0x14    
    0x00C7 :  MOV   0x2D, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 405)
  ;if(g_led_light_times == 0)
    0x00C8 :  BANK  @0x0        
    0x00C9 :  MOV   0x2D, 0x2D  
    0x00CA :  JBS   0x03, 2     
    0x00CB :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 407)
  ;g_led_occupied = 0;
    0x00CC :  BC    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 408)
  ;g_next_state = 0x04;
    0x00CD :  MOV   A, @0x04    
    0x00CE :  MOV   0x32, A     
    0x00CF :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 411)
  ;else if(g_fault_state == 0x04)
    0x00D0 :  BANK  @0x0        
    0x00D1 :  MOV   A, 0x20     
    0x00D2 :  XOR   A, @0x04    
    0x00D3 :  JBS   0x03, 2     
    0x00D4 :  JMP   0x0EF       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 413)
  ;if(g_led_occupied == 0)
    0x00D5 :  JBC   0x2C, 7     
    0x00D6 :  JMP   0x0DE       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 415)
  ;g_led_r = 1;
    0x00D7 :  BS    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 416)
  ;g_led_g = 0;
    0x00D8 :  BC    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 417)
  ;g_led_b = 0;
    0x00D9 :  BC    0x2C, 2     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 418)
  ;g_led_onoff_status = 1;
    0x00DA :  BS    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 419)
  ;g_led_occupied = 1;
    0x00DB :  BS    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 420)
  ;g_led_light_times = 0xa;
    0x00DC :  MOV   A, @0x0A    
    0x00DD :  MOV   0x2D, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 423)
  ;if(g_led_light_times == 0)
    0x00DE :  BANK  @0x0        
    0x00DF :  MOV   0x2D, 0x2D  
    0x00E0 :  JBS   0x03, 2     
    0x00E1 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 425)
  ;if(g_batteryvolt > LOW_BAT_VOLT)
    0x00E2 :  MOV   A, 0x22     
    0x00E3 :  SUB   A, @0x08    
    0x00E4 :  JBS   0x03, 2     
    0x00E5 :  JMP   0x0E8       
    0x00E6 :  MOV   A, 0x21     
    0x00E7 :  SUB   A, @0x88    
    0x00E8 :  JBC   0x03, 0     
    0x00E9 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 427)
  ;g_led_occupied = 0;
    0x00EA :  BANK  @0x0        
    0x00EB :  BC    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 428)
  ;g_next_state = 0x01;
    0x00EC :  MOV   A, @0x01    
    0x00ED :  MOV   0x32, A     
    0x00EE :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 432)
  ;else if(g_fault_state==0x08)
    0x00EF :  BANK  @0x0        
    0x00F0 :  MOV   A, 0x20     
    0x00F1 :  XOR   A, @0x08    
    0x00F2 :  JBS   0x03, 2     
    0x00F3 :  JMP   0x105       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 434)
  ;if(g_led_occupied == 0)
    0x00F4 :  JBC   0x2C, 7     
    0x00F5 :  JMP   0x0FD       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 436)
  ;g_led_r = 1;
    0x00F6 :  BS    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 437)
  ;g_led_g = 1;
    0x00F7 :  BS    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 438)
  ;g_led_b = 1;
    0x00F8 :  BS    0x2C, 2     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 439)
  ;g_led_onoff_status = 1;
    0x00F9 :  BS    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 440)
  ;g_led_occupied = 1;
    0x00FA :  BS    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 441)
  ;g_led_light_times = 0x3;
    0x00FB :  MOV   A, @0x03    
    0x00FC :  MOV   0x2D, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 444)
  ;if(g_led_light_times == 0)
    0x00FD :  BANK  @0x0        
    0x00FE :  MOV   0x2D, 0x2D  
    0x00FF :  JBS   0x03, 2     
    0x0100 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 446)
  ;g_led_occupied = 0;
    0x0101 :  BC    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 447)
  ;g_next_state = 0x01;
    0x0102 :  MOV   A, @0x01    
    0x0103 :  MOV   0x32, A     
    0x0104 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 450)
  ;else if(g_fault_state == 0x10)
    0x0105 :  BANK  @0x0        
    0x0106 :  MOV   A, 0x20     
    0x0107 :  XOR   A, @0x10    
    0x0108 :  JBS   0x03, 2     
    0x0109 :  JMP   0x124       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 452)
  ;if(g_led_occupied == 0)
    0x010A :  JBC   0x2C, 7     
    0x010B :  JMP   0x113       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 454)
  ;g_led_r = 1;
    0x010C :  BS    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 455)
  ;g_led_g = 1;
    0x010D :  BS    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 456)
  ;g_led_b = 1;
    0x010E :  BS    0x2C, 2     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 457)
  ;g_led_onoff_status = 1;
    0x010F :  BS    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 458)
  ;g_led_occupied = 1;
    0x0110 :  BS    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 459)
  ;g_led_light_times = 0x6;
    0x0111 :  MOV   A, @0x06    
    0x0112 :  MOV   0x2D, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 462)
  ;if(g_led_light_times == 0)
    0x0113 :  BANK  @0x0        
    0x0114 :  MOV   0x2D, 0x2D  
    0x0115 :  JBS   0x03, 2     
    0x0116 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 464)
  ;if(g_batteryvolt > LOW_BAT_VOLT)
    0x0117 :  MOV   A, 0x22     
    0x0118 :  SUB   A, @0x08    
    0x0119 :  JBS   0x03, 2     
    0x011A :  JMP   0x11D       
    0x011B :  MOV   A, 0x21     
    0x011C :  SUB   A, @0x88    
    0x011D :  JBC   0x03, 0     
    0x011E :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 466)
  ;g_led_occupied = 0;
    0x011F :  BANK  @0x0        
    0x0120 :  BC    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 467)
  ;g_next_state = 0x04;
    0x0121 :  MOV   A, @0x04    
    0x0122 :  MOV   0x32, A     
    0x0123 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 473)
  ;reserve_led_ocuppied();
    0x0124 :  CALL  0x001       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 474)
  ;g_next_state = 0x01;
    0x0125 :  MOV   A, @0x01    
    0x0126 :  BANK  @0x0        
    0x0127 :  MOV   0x32, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 477)
  ;break;
    0x0128 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 480)
  ;if(g_loadvolt < SHORT_LOAD_VOLT)
    0x0129 :  MOV   A, @0x04    
    0x012A :  BANK  @0x0        
    0x012B :  SUB   A, 0x24     
    0x012C :  JBS   0x03, 2     
    0x012D :  JMP   0x130       
    0x012E :  MOV   A, @0x00    
    0x012F :  SUB   A, 0x23     
    0x0130 :  JBC   0x03, 0     
    0x0131 :  JMP   0x13E       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 482)
  ;adctest_times++;
    0x0132 :  BANK  @0x0        
    0x0133 :  INC   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 483)
  ;if(adctest_times >= 3)
    0x0134 :  MOV   A, @0x03    
    0x0135 :  SUB   A, 0x36     
    0x0136 :  JBS   0x03, 0     
    0x0137 :  JMP   0x157       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 485)
  ;adctest_times = 0;
    0x0138 :  CLR   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 486)
  ;g_fault_state = 0x10;
    0x0139 :  MOV   A, @0x10    
    0x013A :  MOV   0x20, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 487)
  ;g_next_state = 0x02;
    0x013B :  MOV   A, @0x02    
    0x013C :  MOV   0x32, A     
    0x013D :  JMP   0x157       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 490)
  ;else if(g_loadvolt > CHARGE_BAT_VOLT_TH)
    0x013E :  BANK  @0x0        
    0x013F :  MOV   A, 0x24     
    0x0140 :  SUB   A, @0x0B    
    0x0141 :  JBS   0x03, 2     
    0x0142 :  JMP   0x145       
    0x0143 :  MOV   A, 0x23     
    0x0144 :  SUB   A, @0x11    
    0x0145 :  JBC   0x03, 0     
    0x0146 :  JMP   0x153       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 492)
  ;adctest_times++;
    0x0147 :  BANK  @0x0        
    0x0148 :  INC   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 493)
  ;if(adctest_times >= 3)
    0x0149 :  MOV   A, @0x03    
    0x014A :  SUB   A, 0x36     
    0x014B :  JBS   0x03, 0     
    0x014C :  JMP   0x157       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 495)
  ;adctest_times = 0;
    0x014D :  CLR   0x36        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 496)
  ;g_fault_state = 0x02;
    0x014E :  MOV   A, @0x02    
    0x014F :  MOV   0x20, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 497)
  ;g_next_state = 0x02;
    0x0150 :  MOV   A, @0x02    
    0x0151 :  MOV   0x32, A     
    0x0152 :  JMP   0x157       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 502)
  ;DUTY(100);
    0x0153 :  MOV   A, @0x64    
    0x0154 :  BS    0x04, 7     
    0x0155 :  MOV   0x0B, A     
    0x0156 :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 505)
  ;led_ctrl_by_voltage();
    0x0157 :  CALL  0x308       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 507)
  ;break;
    0x0158 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 510)
  ;SLEP();
    0x0159 :  SLEP              
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 511)
  ;P5CR = 0X21;			          //P50,P55设为输入 ,P51设为输出
    0x015A :  MOV   A, @0x21    
    0x015B :  BC    0x03, 6     
    0x015C :  IOW   0x5         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 512)
  ;AISR = 0X40;			          //P55/ADC6引脚作为ADC6输入口
    0x015D :  MOV   A, @0x40    
    0x015E :  BC    0x04, 7     
    0x015F :  MOV   0x08, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 513)
  ;if(g_loadvolt < WAKEUP_LOAD_VOLT)            //由按键唤醒，进入吸烟状态      0.5
    0x0160 :  MOV   A, @0x01    
    0x0161 :  BANK  @0x0        
    0x0162 :  SUB   A, 0x24     
    0x0163 :  JBS   0x03, 2     
    0x0164 :  JMP   0x167       
    0x0165 :  MOV   A, @0x55    
    0x0166 :  SUB   A, 0x23     
    0x0167 :  JBC   0x03, 0     
    0x0168 :  JMP   0x16D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 515)
  ;g_next_state = 0x01;
    0x0169 :  MOV   A, @0x01    
    0x016A :  BANK  @0x0        
    0x016B :  MOV   0x32, A     
    0x016C :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 517)
  ;else if((g_loadvolt > HIG_BAT_VOLT_TH)||(g_loadvolt < FAULT_BAT_VOLT))   //由c_sens唤醒，充电器故障
    0x016D :  BANK  @0x0        
    0x016E :  MOV   A, 0x23     
    0x016F :  MOV   0x11, A     
    0x0170 :  MOV   A, 0x24     
    0x0171 :  MOV   0x12, A     
    0x0172 :  MOV   A, 0x12     
    0x0173 :  SUB   A, @0x0B    
    0x0174 :  JBS   0x03, 2     
    0x0175 :  JMP   0x178       
    0x0176 :  MOV   A, 0x11     
    0x0177 :  SUB   A, @0x33    
    0x0178 :  JBS   0x03, 0     
    0x0179 :  JMP   0x182       
    0x017A :  MOV   A, @0x08    
    0x017B :  SUB   A, 0x12     
    0x017C :  JBS   0x03, 2     
    0x017D :  JMP   0x180       
    0x017E :  MOV   A, @0x00    
    0x017F :  SUB   A, 0x11     
    0x0180 :  JBC   0x03, 0     
    0x0181 :  JMP   0x189       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 519)
  ;reserve_led_ocuppied();
    0x0182 :  CALL  0x001       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 520)
  ;g_fault_state = 0x01;
    0x0183 :  MOV   A, @0x01    
    0x0184 :  BANK  @0x0        
    0x0185 :  MOV   0x20, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 521)
  ;g_next_state = 0x02;
    0x0186 :  MOV   A, @0x02    
    0x0187 :  MOV   0x32, A     
    0x0188 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 525)
  ;if(g_led_occupied == 0)
    0x0189 :  BANK  @0x0        
    0x018A :  JBC   0x2C, 7     
    0x018B :  JMP   0x193       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 527)
  ;g_led_r = 1;
    0x018C :  BS    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 528)
  ;g_led_g = 0;
    0x018D :  BC    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 529)
  ;g_led_b = 1;
    0x018E :  BS    0x2C, 2     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 530)
  ;g_led_onoff_status = 1;
    0x018F :  BS    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 531)
  ;g_led_occupied = 1;
    0x0190 :  BS    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 532)
  ;g_led_light_times = 0x6;
    0x0191 :  MOV   A, @0x06    
    0x0192 :  MOV   0x2D, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 535)
  ;if(g_led_light_times == 0)
    0x0193 :  BANK  @0x0        
    0x0194 :  MOV   0x2D, 0x2D  
    0x0195 :  JBS   0x03, 2     
    0x0196 :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 537)
  ;g_led_occupied = 1;
    0x0197 :  BS    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 538)
  ;g_next_state = 0x04;
    0x0198 :  MOV   A, @0x04    
    0x0199 :  MOV   0x32, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 541)
  ;break;
    0x019A :  JMP   0x19D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 544)
  ;g_next_state = 0x00;
    0x019B :  BANK  @0x0        
    0x019C :  CLR   0x32        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 548)
  ;if(g_time50ms_flag == 1)           //key处理
    0x019D :  BANK  @0x0        
    0x019E :  MOV   A, 0x28     
    0x019F :  XOR   A, @0x01    
    0x01A0 :  JBS   0x03, 2     
    0x01A1 :  JMP   0x1E6       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 550)
  ;g_time50ms_flag = 0;
    0x01A2 :  CLR   0x28        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 551)
  ;g_keyval = P50;
    0x01A3 :  MOV   A, @0x00    
    0x01A4 :  BC    0x04, 7     
    0x01A5 :  JBC   0x05, 0     
    0x01A6 :  ADD   A, @0x01    
    0x01A7 :  MOV   0x25, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 553)
  ;if((temp_keyval == g_keyval)&&(g_keyval == 0))
    0x01A8 :  MOV   A, 0x25     
    0x01A9 :  MOV   0x11, A     
    0x01AA :  MOV   A, 0x37     
    0x01AB :  XOR   A, 0x11     
    0x01AC :  JBS   0x03, 2     
    0x01AD :  JMP   0x1BC       
    0x01AE :  MOV   0x11, 0x11  
    0x01AF :  JBS   0x03, 2     
    0x01B0 :  JMP   0x1BC       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 555)
  ;if(g_loadvolt > LOW_BAT_VOLT)
    0x01B1 :  MOV   A, 0x24     
    0x01B2 :  SUB   A, @0x08    
    0x01B3 :  JBS   0x03, 2     
    0x01B4 :  JMP   0x1B7       
    0x01B5 :  MOV   A, 0x23     
    0x01B6 :  SUB   A, @0x88    
    0x01B7 :  JBC   0x03, 0     
    0x01B8 :  JMP   0x1E3       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 557)
  ;g_keypress_maxtime++;
    0x01B9 :  BANK  @0x0        
    0x01BA :  INC   0x2F        
    0x01BB :  JMP   0x1E3       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 560)
  ;else if((temp_keyval == 0)&&(g_keyval == 1)&&(g_keypress_maxtime < 40))
    0x01BC :  BANK  @0x0        
    0x01BD :  MOV   0x37, 0x37  
    0x01BE :  JBS   0x03, 2     
    0x01BF :  JMP   0x1E3       
    0x01C0 :  MOV   A, 0x25     
    0x01C1 :  XOR   A, @0x01    
    0x01C2 :  JBS   0x03, 2     
    0x01C3 :  JMP   0x1E3       
    0x01C4 :  MOV   A, @0x28    
    0x01C5 :  SUB   A, 0x2F     
    0x01C6 :  JBC   0x03, 0     
    0x01C7 :  JMP   0x1E3       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 562)
  ;g_keypress_maxtime = 0;
    0x01C8 :  CLR   0x2F        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 563)
  ;if(g_keypress_times == 0)
    0x01C9 :  MOV   0x2E, 0x2E  
    0x01CA :  JBS   0x03, 2     
    0x01CB :  JMP   0x1CD       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 565)
  ;g_time2s_flag = 0;
    0x01CC :  CLR   0x2B        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 568)
  ;g_keypress_times++;
    0x01CD :  BANK  @0x0        
    0x01CE :  INC   0x2E        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 570)
  ;if(g_time2s_flag == 1)
    0x01CF :  MOV   A, 0x2B     
    0x01D0 :  XOR   A, @0x01    
    0x01D1 :  JBS   0x03, 2     
    0x01D2 :  JMP   0x1E3       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 572)
  ;if(g_keypress_times >= 5)
    0x01D3 :  MOV   A, @0x05    
    0x01D4 :  SUB   A, 0x2E     
    0x01D5 :  JBS   0x03, 0     
    0x01D6 :  JMP   0x1E3       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 574)
  ;g_keypress_times = 0;
    0x01D7 :  CLR   0x2E        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 576)
  ;DUTY(0);
    0x01D8 :  BS    0x04, 7     
    0x01D9 :  CLR   0x0B        
    0x01DA :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 578)
  ;if(g_cur_state == 0x00)
    0x01DB :  MOV   0x31, 0x31  
    0x01DC :  JBS   0x03, 2     
    0x01DD :  JMP   0x1E1       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 580)
  ;g_next_state = 0x01;
    0x01DE :  MOV   A, @0x01    
    0x01DF :  MOV   0x32, A     
    0x01E0 :  JMP   0x1E3       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 584)
  ;g_next_state = 0x00;
    0x01E1 :  BANK  @0x0        
    0x01E2 :  CLR   0x32        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 590)
  ;temp_keyval = g_keyval;
    0x01E3 :  BANK  @0x0        
    0x01E4 :  MOV   A, 0x25     
    0x01E5 :  MOV   0x37, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 593)
  ;if(g_time1s_flag == 1)           //指示灯处理
    0x01E6 :  BANK  @0x0        
    0x01E7 :  MOV   A, 0x2A     
    0x01E8 :  XOR   A, @0x01    
    0x01E9 :  JBS   0x03, 2     
    0x01EA :  JMP   0x1ED       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 595)
  ;g_time1s_flag = 0;
    0x01EB :  CLR   0x2A        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 596)
  ;led_disp();
    0x01EC :  CALL  0x2AD       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 599)
  ;g_cur_state = g_next_state;
    0x01ED :  BANK  @0x0        
    0x01EE :  MOV   A, 0x32     
    0x01EF :  MOV   0x31, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 303)
  ;while(1)
    0x01F0 :  JMP   0x01E       
    0x01F1 :  RET               
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 94)
  ;switch(IntVecIdx)
    0x01F2 :  MOV   0x10, A     
    0x01F3 :  MOV   A, 0x10     
    0x01F4 :  XOR   A, @0x13    
    0x01F5 :  JBC   0x03, 2     
    0x01F6 :  JMP   0x1F8       
    0x01F7 :  JMP   0x215       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 97)
  ;if(PWM2IF == 1)
    0x01F8 :  BC    0x04, 7     
    0x01F9 :  JBS   0x0F, 4     
    0x01FA :  JMP   0x215       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 99)
  ;PWM2IF = 0;	//清PWM1中断标志位
    0x01FB :  BC    0x0F, 4     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 100)
  ;g_time1ms_cnt++;
    0x01FC :  BANK  @0x0        
    0x01FD :  INC   0x26        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 101)
  ;if(g_time1ms_cnt >= 50)
    0x01FE :  MOV   A, @0x32    
    0x01FF :  SUB   A, 0x26     
    0x0200 :  JBS   0x03, 0     
    0x0201 :  JMP   0x215       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 103)
  ;g_time1ms_cnt = 0;
    0x0202 :  CLR   0x26        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 104)
  ;g_time50ms_flag = 1;
    0x0203 :  MOV   A, @0x01    
    0x0204 :  MOV   0x28, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 105)
  ;g_time50ms_cnt++;
    0x0205 :  INC   0x27        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 106)
  ;if(g_time50ms_cnt == 20)
    0x0206 :  MOV   A, 0x27     
    0x0207 :  XOR   A, @0x14    
    0x0208 :  JBS   0x03, 2     
    0x0209 :  JMP   0x215       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 108)
  ;g_time50ms_cnt = 0;
    0x020A :  CLR   0x27        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 109)
  ;g_time1s_flag = 1;
    0x020B :  MOV   A, @0x01    
    0x020C :  MOV   0x2A, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 110)
  ;g_time1s_cnt++;
    0x020D :  INC   0x29        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 111)
  ;if(g_time1s_cnt == 2)
    0x020E :  MOV   A, 0x29     
    0x020F :  XOR   A, @0x02    
    0x0210 :  JBS   0x03, 2     
    0x0211 :  JMP   0x215       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 113)
  ;g_time1s_cnt = 0;
    0x0212 :  CLR   0x29        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 114)
  ;g_time2s_flag = 1;
    0x0213 :  MOV   A, @0x01    
    0x0214 :  MOV   0x2B, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 121)
  ;}
    0x0215 :  RETI              
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 228)
  ;WDTC();
    0x0216 :  WDTC              
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 229)
  ;DISI();
    0x0217 :  DISI              
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 230)
  ;SCR = 0X7F;			//选择4MHz,TIMER 选择主频
    0x0218 :  MOV   A, @0x7F    
    0x0219 :  BS    0x04, 7     
    0x021A :  MOV   0x0F, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 232)
  ;P6CR = 0;           //P67设为输出
    0x021B :  MOV   A, @0x00    
    0x021C :  BC    0x03, 6     
    0x021D :  IOW   0x6         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 233)
  ;TMRCON = 0X22;		//PWM1预分频比设为1：4，PWM2预分频比设为1：16
    0x021E :  MOV   A, @0x22    
    0x021F :  MOV   0x08, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 234)
  ;PWMCON = 0X01;		//使能PWM1输出口
    0x0220 :  MOV   A, @0x01    
    0x0221 :  MOV   0x07, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 235)
  ;PRD1 = 99;			//周期=1/4*(99+1)*4=100us
    0x0222 :  MOV   A, @0x63    
    0x0223 :  MOV   0x09, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 236)
  ;DUTY(0);            //输出占空比0%的波
    0x0224 :  CLR   0x0B        
    0x0225 :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 237)
  ;PRD2 = 249;         //周期=1/4*(249+1)*16=1ms
    0x0226 :  MOV   A, @0xF9    
    0x0227 :  MOV   0x0A, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 238)
  ;IMR = 0X10;			//使能PWM2中断
    0x0228 :  MOV   A, @0x10    
    0x0229 :  IOW   0xF         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 239)
  ;T2EN = 1;		    //PWM2定时开始
    0x022A :  BS    0x08, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 240)
  ;ENI();
    0x022B :  ENI               
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 242)
  ;P5CR = 0X21;			//P50,P55设为输入 ,P51设为输出
    0x022C :  MOV   A, @0x21    
    0x022D :  IOW   0x5         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 243)
  ;P5PHCR = 0XFC;        //P50,P51上拉
    0x022E :  MOV   A, @0xFC    
    0x022F :  IOW   0xD         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 244)
  ;AISR = 0X40;			//P55/ADC6引脚作为ADC6输入口
    0x0230 :  MOV   A, @0x40    
    0x0231 :  BC    0x04, 7     
    0x0232 :  MOV   0x08, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 246)
  ;ISR1 = 0X02;			//使能PORT5状态改变唤醒功能
    0x0233 :  MOV   A, @0x02    
    0x0234 :  MOV   0x0E, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 247)
  ;PORT5 = PORT5;		//读取PORT5状态
    0x0235 :  MOV   0x05, 0x05  
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 248)
  ;IDLE = 0;
    0x0236 :  BS    0x04, 7     
    0x0237 :  BC    0x0F, 4     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 250)
  ;P7CR = 0X01;			//P70设为输入 ,P71设为输出
    0x0238 :  MOV   A, @0x01    
    0x0239 :  IOW   0x7         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 251)
  ;AISR = 0X20;			//P71/ADC5引脚作为ADC5输入口
    0x023A :  MOV   A, @0x20    
    0x023B :  BC    0x04, 7     
    0x023C :  MOV   0x08, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 252)
  ;ADCON = 0X0D;			//选择ADC5输入口
    0x023D :  MOV   A, @0x0D    
    0x023E :  MOV   0x09, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 253)
  ;ad_cali_p();		//调用AD子程序
    0x023F :  CALL  0x27D       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 257)
  ;ADRUN = 1;					//使能AD转换
    0x0240 :  BC    0x04, 7     
    0x0241 :  BS    0x09, 4     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 258)
  ;while(ADRUN == 1);			//等待AD转换完成
    0x0242 :  BC    0x04, 7     
    0x0243 :  JBC   0x09, 4     
    0x0244 :  JMP   0x242       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 259)
  ;g_batteryvolt_h = ADDATA1H;
    0x0245 :  MOV   A, 0x0C     
    0x0246 :  BANK  @0x0        
    0x0247 :  MOV   0x22, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 260)
  ;g_batteryvolt_l = ADDATA1L;		//保存AD转换值
    0x0248 :  MOV   A, 0x0D     
    0x0249 :  MOV   0x21, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 262)
  ;while(g_batteryvolt < LOW_BAT_VOLT);
    0x024A :  MOV   A, @0x08    
    0x024B :  SUB   A, 0x22     
    0x024C :  JBS   0x03, 2     
    0x024D :  JMP   0x250       
    0x024E :  MOV   A, @0x88    
    0x024F :  SUB   A, 0x21     
    0x0250 :  JBS   0x03, 0     
    0x0251 :  JMP   0x240       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 264)
  ;g_led_r = 1;                  //红灯
    0x0252 :  BANK  @0x0        
    0x0253 :  BS    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 265)
  ;g_led_g = 1;                  //红灯
    0x0254 :  BS    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 266)
  ;g_led_b = 1;                  //蓝灯
    0x0255 :  BS    0x2C, 2     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 267)
  ;g_led_onoff_status = 0;
    0x0256 :  BC    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 268)
  ;g_led_occupied = 0;
    0x0257 :  BC    0x2C, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 269)
  ;g_led_light_times = 0x3;
    0x0258 :  MOV   A, @0x03    
    0x0259 :  MOV   0x2D, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 273)
  ;if(g_time1s_flag == 1)
    0x025A :  BANK  @0x0        
    0x025B :  MOV   A, 0x2A     
    0x025C :  XOR   A, @0x01    
    0x025D :  JBS   0x03, 2     
    0x025E :  JMP   0x261       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 275)
  ;g_time1s_flag = 0;
    0x025F :  CLR   0x2A        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 276)
  ;led_disp();
    0x0260 :  CALL  0x2AD       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 278)
  ;}while(g_led_light_times == 0);
    0x0261 :  BANK  @0x0        
    0x0262 :  MOV   0x2D, 0x2D  
    0x0263 :  JBC   0x03, 2     
    0x0264 :  JMP   0x25A       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 280)
  ;g_keyval = P50;
    0x0265 :  MOV   A, @0x00    
    0x0266 :  BC    0x04, 7     
    0x0267 :  JBC   0x05, 0     
    0x0268 :  ADD   A, @0x01    
    0x0269 :  MOV   0x25, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 281)
  ;if(g_keyval == 0)
    0x026A :  MOV   0x25, 0x25  
    0x026B :  JBS   0x03, 2     
    0x026C :  JMP   0x274       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 283)
  ;DUTY(100);
    0x026D :  MOV   A, @0x64    
    0x026E :  BS    0x04, 7     
    0x026F :  MOV   0x0B, A     
    0x0270 :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 284)
  ;g_cur_state = 0x01;
    0x0271 :  MOV   A, @0x01    
    0x0272 :  MOV   0x31, A     
    0x0273 :  JMP   0x27A       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 288)
  ;DUTY(0);
    0x0274 :  BS    0x04, 7     
    0x0275 :  CLR   0x0B        
    0x0276 :  BS    0x08, 6     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 289)
  ;g_cur_state = 0x08;
    0x0277 :  MOV   A, @0x08    
    0x0278 :  BANK  @0x0        
    0x0279 :  MOV   0x31, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 292)
  ;g_fault_state = 0x00;
    0x027A :  BANK  @0x0        
    0x027B :  CLR   0x20        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 293)
  ;}
    0x027C :  RET               
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 58)
  ;uchar cnt = 0x07;
    0x027D :  MOV   A, @0x07    
    0x027E :  BANK  @0x0        
    0x027F :  MOV   0x33, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 60)
  ;ADOC = 0xF8;		    //使能ADC位校正功能
    0x0280 :  MOV   A, @0xF8    
    0x0281 :  BC    0x04, 7     
    0x0282 :  MOV   0x0A, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 64)
  ;ADRUN = 1;			//开始AD转换
    0x0283 :  BC    0x04, 7     
    0x0284 :  BS    0x09, 4     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 65)
  ;while(ADRUN == 1);	//等待AD转换完成
    0x0285 :  BC    0x04, 7     
    0x0286 :  JBC   0x09, 4     
    0x0287 :  JMP   0x285       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 66)
  ;cnt--;
    0x0288 :  BANK  @0x0        
    0x0289 :  DEC   0x33        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 67)
  ;if(!SIGN)			//offset 负电压
    0x028A :  JBC   0x0A, 6     
    0x028B :  JMP   0x28F       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 69)
  ;ADOC += 0x08;
    0x028C :  MOV   A, @0x08    
    0x028D :  ADD   0x0A, A     
    0x028E :  JMP   0x292       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 73)
  ;ADOC -= 0x08;
    0x028F :  MOV   A, @0x08    
    0x0290 :  BC    0x04, 7     
    0x0291 :  SUB   0x0A, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 75)
  ;if(cnt == 0)
    0x0292 :  BANK  @0x0        
    0x0293 :  MOV   0x33, 0x33  
    0x0294 :  JBS   0x03, 2     
    0x0295 :  JMP   0x2A0       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 77)
  ;cnt = 0x07;
    0x0296 :  MOV   A, @0x07    
    0x0297 :  MOV   0x33, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 78)
  ;if(SIGN)
    0x0298 :  BC    0x04, 7     
    0x0299 :  JBS   0x0A, 6     
    0x029A :  JMP   0x29E       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 80)
  ;ADOC = 0x80;
    0x029B :  MOV   A, @0x80    
    0x029C :  MOV   0x0A, A     
    0x029D :  JMP   0x2A0       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 84)
  ;CALI = 0;
    0x029E :  BC    0x04, 7     
    0x029F :  BC    0x0A, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 87)
  ;}while((ADDATA1H || ADDATA1L) && CALI);
    0x02A0 :  BC    0x04, 7     
    0x02A1 :  MOV   0x0C, 0x0C  
    0x02A2 :  JBS   0x03, 2     
    0x02A3 :  JMP   0x2A7       
    0x02A4 :  MOV   0x0D, 0x0D  
    0x02A5 :  JBC   0x03, 2     
    0x02A6 :  JMP   0x2AA       
    0x02A7 :  BC    0x04, 7     
    0x02A8 :  JBC   0x0A, 7     
    0x02A9 :  JMP   0x283       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 89)
  ;CALI = 0;
    0x02AA :  BC    0x04, 7     
    0x02AB :  BC    0x0A, 7     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 90)
  ;}
    0x02AC :  RET               
    0x02AD :  MOV   A, 0x11     
    0x02AE :  BANK  @0x0        
    0x02AF :  MOV   0x34, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 149)
  ;if(g_led_light_times >= 1)
    0x02B0 :  MOV   A, @0x01    
    0x02B1 :  SUB   A, 0x2D     
    0x02B2 :  JBS   0x03, 0     
    0x02B3 :  JMP   0x2C4       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 151)
  ;if(g_led_onoff_status)   //0000 0000 0000 1000
    0x02B4 :  JBS   0x2C, 3     
    0x02B5 :  JMP   0x2BE       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 153)
  ;if(g_led_light_times != 0xff)
    0x02B6 :  MOV   A, 0x2D     
    0x02B7 :  XOR   A, @0xFF    
    0x02B8 :  JBC   0x03, 2     
    0x02B9 :  JMP   0x2BB       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 155)
  ;g_led_onoff_status = 0;
    0x02BA :  BC    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 158)
  ;g_led_onoff = 0;          //灯亮
    0x02BB :  BANK  @0x0        
    0x02BC :  CLR   0x30        
    0x02BD :  JMP   0x2C7       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 162)
  ;g_led_onoff_status = 1;
    0x02BE :  BANK  @0x0        
    0x02BF :  BS    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 163)
  ;g_led_onoff = 1;         //灯灭
    0x02C0 :  MOV   A, @0x01    
    0x02C1 :  MOV   0x30, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 164)
  ;g_led_light_times--;
    0x02C2 :  DEC   0x2D        
    0x02C3 :  JMP   0x2C7       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 169)
  ;g_led_onoff = 1;             //灯灭
    0x02C4 :  MOV   A, @0x01    
    0x02C5 :  BANK  @0x0        
    0x02C6 :  MOV   0x30, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 172)
  ;if(g_led_r)
    0x02C7 :  BANK  @0x0        
    0x02C8 :  JBS   0x2C, 0     
    0x02C9 :  JMP   0x2D0       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 174)
  ;P70 = g_led_onoff;           //红灯
    0x02CA :  MOV   A, 0x30     
    0x02CB :  MOV   0x11, A     
    0x02CC :  BC    0x04, 7     
    0x02CD :  BC    0x07, 0     
    0x02CE :  JBC   0x11, 0     
    0x02CF :  BS    0x07, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 177)
  ;if(g_led_g)
    0x02D0 :  BANK  @0x0        
    0x02D1 :  JBS   0x2C, 1     
    0x02D2 :  JMP   0x2D9       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 179)
  ;P71 = g_led_onoff;          //绿灯
    0x02D3 :  MOV   A, 0x30     
    0x02D4 :  MOV   0x11, A     
    0x02D5 :  BC    0x04, 7     
    0x02D6 :  BC    0x07, 1     
    0x02D7 :  JBC   0x11, 0     
    0x02D8 :  BS    0x07, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 182)
  ;if(g_led_b)
    0x02D9 :  BANK  @0x0        
    0x02DA :  JBS   0x2C, 2     
    0x02DB :  JMP   0x2E3       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 184)
  ;P51 = ~g_led_onoff;         //蓝灯
    0x02DC :  MOV   A, 0x30     
    0x02DD :  MOV   0x11, A     
    0x02DE :  COM   0x11        
    0x02DF :  BC    0x04, 7     
    0x02E0 :  BC    0x05, 1     
    0x02E1 :  JBC   0x11, 0     
    0x02E2 :  BS    0x05, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 186)
  ;}
    0x02E3 :  BANK  @0x0        
    0x02E4 :  MOV   A, 0x34     
    0x02E5 :  MOV   0x11, A     
    0x02E6 :  RET               
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 130)
  ;ADCON = 0x06;
    0x02E7 :  MOV   A, @0x06    
    0x02E8 :  BC    0x04, 7     
    0x02E9 :  MOV   0x09, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 131)
  ;ADRUN = 1;
    0x02EA :  BS    0x09, 4     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 132)
  ;while(ADRUN == 1);
    0x02EB :  BC    0x04, 7     
    0x02EC :  JBC   0x09, 4     
    0x02ED :  JMP   0x2EB       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 133)
  ;g_batteryvolt_h = ADDATA1H;
    0x02EE :  MOV   A, 0x0C     
    0x02EF :  BANK  @0x0        
    0x02F0 :  MOV   0x22, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 134)
  ;g_batteryvolt_l = ADDATA1L;
    0x02F1 :  MOV   A, 0x0D     
    0x02F2 :  MOV   0x21, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 136)
  ;P7CR = 0x01;
    0x02F3 :  MOV   A, @0x01    
    0x02F4 :  BC    0x03, 6     
    0x02F5 :  IOW   0x7         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 137)
  ;AISR = 0x20;
    0x02F6 :  MOV   A, @0x20    
    0x02F7 :  MOV   0x08, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 138)
  ;ADCON = 0x05;
    0x02F8 :  MOV   A, @0x05    
    0x02F9 :  MOV   0x09, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 139)
  ;ADRUN = 1;
    0x02FA :  BS    0x09, 4     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 140)
  ;while(ADRUN == 1);
    0x02FB :  BC    0x04, 7     
    0x02FC :  JBC   0x09, 4     
    0x02FD :  JMP   0x2FB       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 141)
  ;g_loadvolt_h = ADDATA1H;
    0x02FE :  MOV   A, 0x0C     
    0x02FF :  BANK  @0x0        
    0x0300 :  MOV   0x24, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 142)
  ;g_loadvolt_l = ADDATA1L;
    0x0301 :  MOV   A, 0x0D     
    0x0302 :  MOV   0x23, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 143)
  ;P7CR = 0x00;
    0x0303 :  MOV   A, @0x00    
    0x0304 :  BC    0x03, 6     
    0x0305 :  IOW   0x7         
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 144)
  ;AISR = 0x00;
    0x0306 :  CLR   0x08        
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 145)
  ;}
    0x0307 :  RET               
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 190)
  ;if(g_loadvolt < LOW_BAT_VOLT_TH)
    0x0308 :  MOV   A, @0x09    
    0x0309 :  BANK  @0x0        
    0x030A :  SUB   A, 0x24     
    0x030B :  JBS   0x03, 2     
    0x030C :  JMP   0x30F       
    0x030D :  MOV   A, @0x55    
    0x030E :  SUB   A, 0x23     
    0x030F :  JBC   0x03, 0     
    0x0310 :  JMP   0x316       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 192)
  ;g_led_r = 1;                  //红灯
    0x0311 :  BANK  @0x0        
    0x0312 :  BS    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 193)
  ;g_led_g = 0;                  //绿灯
    0x0313 :  BC    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 194)
  ;g_led_b = 0;                  //蓝灯
    0x0314 :  BC    0x2C, 2     
    0x0315 :  JMP   0x328       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 196)
  ;else if(g_loadvolt < MID_BAT_VOLT_TH)
    0x0316 :  MOV   A, @0x0A    
    0x0317 :  BANK  @0x0        
    0x0318 :  SUB   A, 0x24     
    0x0319 :  JBS   0x03, 2     
    0x031A :  JMP   0x31D       
    0x031B :  MOV   A, @0x22    
    0x031C :  SUB   A, 0x23     
    0x031D :  JBC   0x03, 0     
    0x031E :  JMP   0x324       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 198)
  ;g_led_r = 1;                  //红灯
    0x031F :  BANK  @0x0        
    0x0320 :  BS    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 199)
  ;g_led_g = 0;                  //绿灯
    0x0321 :  BC    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 200)
  ;g_led_b = 1;                  //蓝灯
    0x0322 :  BS    0x2C, 2     
    0x0323 :  JMP   0x328       
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 204)
  ;g_led_r = 0;                  //红灯
    0x0324 :  BANK  @0x0        
    0x0325 :  BC    0x2C, 0     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 205)
  ;g_led_g = 0;                  //绿灯
    0x0326 :  BC    0x2C, 1     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 206)
  ;g_led_b = 1;                  //蓝灯
    0x0327 :  BS    0x2C, 2     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 209)
  ;g_led_onoff_status = 1;           //灯亮
    0x0328 :  BANK  @0x0        
    0x0329 :  BS    0x2C, 3     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 210)
  ;g_led_light_times = 0xff;
    0x032A :  MOV   A, @0xFF    
    0x032B :  MOV   0x2D, A     
D:\Program Files (x86)\ELAN\eUIDE\V2\main.c (line 211)
  ;}
    0x032C :  RET               
